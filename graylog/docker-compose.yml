version: "3.8"

services:
  mongodb:
    image: ${IMAGE_MONGODB:-public.ecr.aws/docker/library/mongo:5.0.21}
    volumes:
      - mongodb_data:/data/db
    restart: "on-failure"
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 256M
        reservations:
          cpus: "0.1"
          memory: 128M

  opensearch:
    image: ${IMAGE_OPENSEARCH:-public.ecr.aws/opensearchproject/opensearch:2.4.0}
    environment:
      - "OPENSEARCH_JAVA_OPTS=-Xms768m -Xmx1g"
      - "bootstrap.memory_lock=true"
      - "discovery.type=single-node"
      - "action.auto_create_index=false"
      - "plugins.security.ssl.http.enabled=false"
      - "plugins.security.disabled=true"
    ulimits:
      memlock:
        hard: -1
        soft: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - os_data:/usr/share/opensearch/data
    restart: "on-failure"
    deploy:
      resources:
        limits:
          cpus: "0.6"
          memory: 1024M
        reservations:
          cpus: "0.5"
          memory: 512M

  graylog:
    hostname: "graylog-server"
    image: "${IMAGE_GRAYLOG:-graylog/graylog:5.1.6}"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      opensearch:
        condition: "service_started"
      mongodb:
        condition: "service_started"
    entrypoint: "/usr/bin/tini -- wait-for-it opensearch:9200 --  /docker-entrypoint.sh"
    environment:
      GRAYLOG_NODE_ID_FILE: "/usr/share/graylog/data/config/node-id"
      # You MUST set a secret to secure/pepper the stored user passwords here. Use at least 64 characters.
      # Generate one by using for example: pwgen -N 1 -s 96
      # ATTENTION: This value must be the same on all Graylog nodes in the cluster.
      # Changing this value after installation will render all user sessions and encrypted values in the database invalid. (e.g. encrypted access tokens)
      GRAYLOG_PASSWORD_SECRET: "${GRAYLOG_PASSWORD_SECRET:-somepasswordpotato}"
      # You MUST specify a hash password for the root user (which you only need to initially set up the
      # system and in case you lose connectivity to your authentication backend)
      # This password cannot be changed using the API or via the web interface. If you need to change it,
      # Create one by using for example: echo -n yourpassword | shasum -a 256
      # and put the resulting hash value into the following line
      # Default passowrd/username will be "admin" 
      GRAYLOG_ROOT_PASSWORD_SHA2: "${GRAYLOG_ROOT_PASSWORD_SHA2:-8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918}"
      GRAYLOG_HTTP_BIND_ADDRESS: "0.0.0.0:9000"
      GRAYLOG_HTTP_EXTERNAL_URI: "http://localhost:9000/"
      GRAYLOG_ELASTICSEARCH_HOSTS: "http://opensearch:9200"
      GRAYLOG_MONGODB_URI: "mongodb://mongodb:27017/graylog"
      # Automatically create GELF UDP Input
      GRAYLOG_CONTENT_PACKS_LOADER_ENABLED: true
      GRAYLOG_CONTENT_PACKS_AUTO_INSTALL: gelf.json
    healthcheck:
      test: curl --silent -f http://127.0.0.1:9000/api || exit 1
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    ports:
    - "5044:5044/tcp"   # Beats
    - "5140:5140/udp"   # Syslog
    - "5140:5140/tcp"   # Syslog
    - "5555:5555/tcp"   # RAW TCP
    - "5555:5555/udp"   # RAW TCP
    - "9000:9000/tcp"   # Server API
    - "12201:12201/tcp" # GELF TCP
    - "12201:12201/udp" # GELF UDP
    #- "10000:10000/tcp" # Custom TCP port
    #- "10000:10000/udp" # Custom UDP port
    - "13301:13301/tcp" # Forwarder data
    - "13302:13302/tcp" # Forwarder config
    volumes:
      - graylog_data:/usr/share/graylog/data/data
      - graylog_journal:/usr/share/graylog/data/journal
      - ./config/contentpacks:/usr/share/graylog/data/contentpacks
    restart: "on-failure"
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 768M
        reservations:
          cpus: "0.4"
          memory: 512M

  # The following container is just a container test using nginx.
  # Logs from nginx will be sended to graylog
  # More details check the directory contentpacks
  nginx-test:
    image: ${IMAGE_NGINX:-public.ecr.aws/nginx/nginx:1.25-alpine}
    ports:
      - 8888:80
    depends_on:
      graylog:
        condition: service_healthy
    logging:
      driver: gelf
      options:
        # Careful, the address to send the log is relative to the docker host, not the container!
        gelf-address: "udp://host.docker.internal:12201"
        tag: nginx
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 64M
        reservations:
          cpus: "0.1"
          memory: 32M

volumes:
  mongodb_data:
  os_data:
  graylog_data:
  graylog_journal:
